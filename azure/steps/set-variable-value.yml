parameters:
# new_value - Required - The new value of the variable
- name: new_value
  type: string
  default: ''
# variable_name - Required - The name of the variable to set
- name: variable_name
  type: string
  default: ''
# variables_to_set - Required - Array {variable_name, new_value}
- name: variables_to_set
  default: []
# name - (Optional) - Specify a name if you need to extract output variable values
- name: name
  type: string
  default: ''

steps:
  - task: PowerShell@2
    ${{ if and( ne(parameters.name, ''), ne(parameters.variable_name,'')) }}:
      name: ${{ parameters.name }}
    condition: ${{ ne(parameters.variable_name,'') }}
    displayName: 'Set variable [${{ parameters.variable_name }}] to value [${{ parameters.new_value }}]'
    inputs:
      targetType: 'inline'
      workingDirectory: $(Pipeline.Workspace)
      script: |
          $variable_value = '${{ parameters.new_value }}'
          Write-Host "Variable value is $variable_value"

          $variable_name = '${{ parameters.variable_name }}'
          Write-Host "Variable to set $variable_name"

          echo "##vso[task.setvariable variable=$variable_name;isOutput=true]$variable_value"
          Write-Host "Output variable '$variable_name' set to $variable_value"

  - task: PowerShell@2
    ${{ if and( ne(parameters.name, ''), eq(parameters.variable_name,'')) }}:
      name: ${{ parameters.name }}
    condition: ${{ eq(parameters.variable_name,'') }}
    displayName: 'Set variables'
    inputs:
      targetType: 'inline'
      workingDirectory: $(Pipeline.Workspace)
      env:
        VARIABLES_TO_SET: ${{ join(';', parameters.variables_to_set) }}
      script: |
          $params = $env:VARIABLES_TO_SET -split ";"
            foreach($param in $params) {
              $splits = $param.Split("|")
              if ([string]::IsNullOrEmpty($splits[1])) {
                  $variable_name = $splits[0]
                  $variable_value = $splits[1]
                  echo "##vso[task.setvariable variable=$variable_name;isOutput=true]$variable_value"
                  Write-Host "Output variable '$variable_name' set to $variable_value"
              }
            }
