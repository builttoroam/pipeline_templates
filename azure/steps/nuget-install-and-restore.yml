parameters:
# nuget_version_to_install - (Optional) Use to override the NuGet version (defaults to 4.4.1)
- name: nuget_version_to_install
  type: string
  default: '4.4.1'
# solution_filename - (Required) The relative path to the solution file that should be built
- name: solution_filename
  type: string
# build_configuration - (Optional) The configuration to use for nuget restore
- name: build_configuration
  type: string
  default: ''
# nuget_cache_enabled - (Required) Whether nuget packages should be cached
- name: nuget_cache_enabled
  type: boolean
  default: true


steps:
  - task: Cache@2
    condition: eq( ${{ parameters.nuget_cache_enabled }}, true)
    displayName: Cache
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/packages.lock.json'
      path: '$(Pipeline.Workspace)/.nuget/packages'
      restoreKeys: |
        nuget | "$(Agent.OS)"
        nuget
      cacheHitVar: 'CACHE_RESTORED'

  # Select the NuGet version based on the nuget_version_to_install parameter          
  - task: NuGetToolInstaller@1
    condition: or( ne(${{ parameters.nuget_cache_enabled }}, true), ne(variables.CACHE_RESTORED, true))
    displayName: 'Use NuGet ${{ parameters.nuget_version_to_install }}'
    inputs:
      versionSpec: '${{ parameters.nuget_version_to_install }}'

  # NuGet restore for solution
  - task: NuGetCommand@2
    condition: or( ne(${{ parameters.nuget_cache_enabled }}, true), ne(variables.CACHE_RESTORED, true))
    displayName: 'Restore NuGet for solution ${{ parameters.solution_filename }}'
    inputs:
      ${{ if ne( parameters.build_configuration , '') }}:
        configuration: '${{ parameters.build_configuration }}'
      restoreSolution: '${{ parameters.solution_filename }}'