parameters:
# name - (Optional) The name prefix of all stages 
# Defaults to ''
- name: name
  type: string
  default: ''
# # depends_on - (Optional) The array of stages that this stage depends on. Default is that this stage does not depend on 
# # any other stage
# - name: depends_on
#   type: string
#   default: ''
# # vm_image - (Optional) The name of the vm image to use for execution. Defaults to windows-2022
# - name: vm_image
#   type: string
#   default: 'windows-2022'
# # build_enabled - (Optional) Whether this stages should be executed. Note that setting this to false won't completely
# # cancel the stage, it will merely skip most of the stages. The stage will appear to complete successfully, so
# # any stages that depend on this stage will attempt to execute
# - name: build_enabled
#   type: boolean
#   default: true

# solution_filename - (Required) The relative path to the solution file that should be built
- name: solution_filename
  type: string

- name: wasm_project_file
  type: string
  default: ''

- name: ios_solution_filter
  type: string
  default: ''

# # solution_build_configuration - (Optional) The build configuration within the solution that should be invoked. 
# # Default is Release but can be overwritten if you want to do say a Debug build
# - name: solution_build_configuration
#   type: string
#   default: Debug
# # solution_target_platform - (Optional) The target platform that the solution build will use. 
# # Defaults to 'x86'
# - name: solution_target_platform
#   type: string
#   default: 'x86'

- name: solution_build_enabled
  type: boolean
  default: false

- name: ios_enabled
  type: boolean
  default: false
- name: uwp_enabled
  type: boolean
  default: false
- name: android_enabled
  type: boolean
  default: false
- name: wasm_enabled
  type: boolean
  default: false

- name: deploy_enabled
  type: boolean
  default: false

- name: full_version_number
  type: string
  default: '1.0.$(Build.BuildId)' 


- name: appsettings_securefile
  type: string
  default: ''

- name: appsettings_filename
  type: string
  default: 'appsettings.json'

- name: banner_enabled
  type: boolean
  default: false

- name: banner_image_expression
  type: string
  default: '**/*.png'

- name: banner_version_name_position
  type: string
  default: 'bottomRight'
  values:
  - none
  - bottomRight
  - bottomLeft
  - topLeft
  - topRight

- name: banner_version_name_text
  type: string
  default: ''

- name: banner_version_name_color
  type: string
  default: '#C5000D'

- name: banner_version_name_text_color
  type: string
  default: '#FFFFFF'

- name: banner_version_number_position
  type: string
  default: 'none'
  values:
  - none
  - top
  - bottom
  - center

- name: banner_version_number_text
  type: string
  default: ''

- name: banner_version_number_color
  type: string
  default: '#34424F'

- name: banner_version_number_text_color
  type: string
  default: '#FFFFFF'

- name: deploy_environment
  type: string
  default: 'Default'

- name: wasm_static_app_name
  type: string
  default: ''

- name: azure_subscription_connection_name
  type: string
  default: ''

- name: resource_group_name
  type: string
  default: ''

# # artifact_name - (Optional) The name of the artifact to copy application to
# - name: artifact_name
#   type: string
#   default: 'drop'
# # artifact_folder - (Optional) The name of the folder to copy application to in the artifact
# - name: artifact_folder
#   type: string
#   default: 'Solution'

# # onStart - (Optional) Steps to be executed before stage starts
# - name: onStart
#   type: stepList
#   default: []
# # preBuild - (Optional) Steps to be executed before the build starts
# - name: preBuild
#   type: stepList
#   default: []
# # postBuild - (Optional) Steps to be executed after the build has been invoked
# - name: postBuild
#   type: stepList
#   default: []
# # prePublish - (Optional) Steps to be executed before application package is published to artifact
# - name: prePublish
#   type: stepList
#   default: []
# # onEnd - (Optional) Steps to be executed at the end of the stage
# - name: onEnd
#   type: stepList
#   default: []

# # windows_nuget_version - (Optional) Use to override the NuGet version (defaults to 6.0.0)
# - name: windows_nuget_version
#   type: string
#   default: '6.0.0'
# # net_core_version - (Optional) Use to override the .NET Core version (defaults to 6.0.x)
# - name: net_core_version 
#   type: string 
#   default: '6.0.x'
# # windows_sdk_version - (Optional) The version of the windows sdk to install (default '' for no installation)
# - name: windows_sdk_version 
#   type: string 
#   default: ''

# appcenter_service_connection - (Required) The name of the service connection that connects Azure DevOps
# to App Center. Go to Service Connections in Azure DevOps to setup the connection and assign permissions
# for pipelines to access it
- name: appcenter_service_connection
  type: string
  default: ''

# appcenter_organisation - (Required) The organisation (or individual) in App Center that the application 
# is associated with. In AppCenter navigate to the application and extract organisation from URL
# eg https://appcenter.ms/users/[organisation]/apps/[applicationid]
# More information at https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/app-center-distribute?view=azure-devops
- name: appcenter_organisation
  type: string
  default: ''

# appcenter_applicationid - (Required) The application id in App Center that identifies 
# the application. In AppCenter navigate to the application and extract application id from URL
# eg https://appcenter.ms/users/[organisation]/apps/[applicationid]
# More information at https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/app-center-distribute?view=azure-devops
- name: appcenter_applicationid_android
  type: string
  default: ''
- name: appcenter_applicationid_ios
  type: string
  default: ''
- name: appcenter_applicationid_uwp
  type: string
  default: ''

# android_secure_file_keystore_filename - (Optiona) IMPORTANT: This is required if application package is an AAB. 
# The keystore file used to sign the APK when extracte from an AAB. This is the name of the keystore in Secure Files. 
- name: android_secure_file_keystore_filename
  type: string
  default: ''
# keystore_alias - (Optional) IMPORTANT: This is required if application package is an AAB. The alias of the keystore. 
- name: android_keystore_alias
  type: string
  default: ''
# keystore_password - (Optional) IMPORTANT: This is required if application package is an AAB. The password to access the keystore
- name: android_keystore_password
  type: string
  default: ''

# ios_plist_filename - (Optional) The Info.plist file that contains the application information such as bundle id
# and version information. If not specified, template will locate the first Info.plist automatically.
- name: ios_plist_filename
  type: string
  default: ''
# ios_cert_securefiles_filename - (Required) The certificate file used to sign the application. This is the name
# of the certificate in Secure Files
- name: ios_cert_securefiles_filename 
  type: string 
  default: ''
# ios_cert_password - (Optional) The password to unlock the certificate so it can be used. This is required
# if the certificate has a password set
- name: ios_cert_password 
  type: string 
  default: ''
# ios_provisioning_profile_securefiles_filename - (Required) The provisioning profile to use when signing the application.
# This is the name of the provisioning profile in Secure Files
- name: ios_provisioning_profile_securefiles_filename 
  type: string
  default: '' 

stages:
- stage: '${{ parameters.name }}Print_Parameters'

  jobs:
  - job: PrintParameters

    steps:
    - task: Bash@3
      displayName: 'Parameters'
      condition: and( succeeded(), eq(variables['agent.diagnostic'], 'true') )
      inputs:
        targetType: inline
        script: |
          echo -------------------------------------------------------------
          echo -------------------------------------------------------------
          echo Name: "${{ parameters.name }}"
          echo Solution filename: "${{ parameters.solution_filename }}"
          echo Wasm project file: "${{ parameters.wasm_project_file }}"
          echo iOS enabled: "${{ parameters.ios_enabled }}"
          echo Uwp enabled: "${{ parameters.uwp_enabled }}"
          echo Android enabled: "${{ parameters.android_enabled }}"
          echo Wasm enabled: "${{ parameters.wasm_enabled }}"
          echo Deploy enabled: "${{ parameters.deploy_enabled }}"
          echo Full version number: "${{ parameters.full_version_number }}"
          echo Appsettings secure file: "${{ parameters.appsettings_securefile }}"
          echo Appsettings filename: "${{ parameters.appsettings_filename }}"
          echo Banner enabled: "${{ parameters.banner_enabled }}"
          echo Banner image expression: "${{ parameters.banner_image_expression }}"
          echo Banner version name position: "${{ parameters.banner_version_name_position }}"
          echo Banner version name text: "${{ parameters.banner_version_name_text }}"
          echo Banner version name color: "${{ parameters.banner_version_name_color }}"
          echo Banner version name text color: "${{ parameters.banner_version_name_text_color }}"
          echo Banner version number position: "${{ parameters.banner_version_number_position }}"
          echo Banner version number text: "${{ parameters.banner_version_number_text }}"
          echo Banner version number color: "${{ parameters.banner_version_number_color }}"
          echo Banner version number text color: "${{ parameters.banner_version_number_text_color }}"
          echo Deploy environment: "${{ parameters.deploy_environment }}"
          echo Wasm static web app name: "${{ parameters.wasm_static_app_name }}"
          echo Azure subscription connection name: "${{ parameters.azure_subscription_connection_name }}"
          echo Resource group name: "${{ parameters.resource_group_name }}"
          echo Appcenter service connection: "${{ parameters.appcenter_service_connection }}"
          echo Appcenter organisation: "${{ parameters.appcenter_organisation }}"
          echo Appcenter applicationid Android: "${{ parameters.appcenter_applicationid_android }}"
          echo Appcenter applicationid iOS: "${{ parameters.appcenter_applicationid_ios }}"
          echo Appcenter applicationid UWP: "${{ parameters.appcenter_applicationid_uwp }}"
          echo Android Secure file - keystore filename: "${{ parameters.android_secure_file_keystore_filename }}"
          echo Android Keystore alias: "${{ parameters.android_keystore_alias }}"
          echo Android Keystore password: "${{ parameters.android_keystore_password }}"
          echo iOS plist filename: "${{ parameters.ios_plist_filename }}"
          echo iOS Certificate securefiles filename: "${{ parameters.ios_cert_securefiles_filename }}"
          echo iOS Certificate password: "${{ parameters.ios_cert_password }}"
          echo iOS Provisioning profile securefiles filename: "${{ parameters.ios_provisioning_profile_securefiles_filename }}"
          echo -------------------------------------------------------------
          echo -------------------------------------------------------------

- ${{ if parameters.solution_build_enabled }}:
  - template:  build-solution.yml
    parameters:
      # Stage name and whether it's enabled
      stage_name: '${{ parameters.name }}Build_Solution'
      depends_on: '${{ parameters.name }}Print_Parameters'
      # Solution to build
      solution_filename: ${{ parameters.solution_filename }}

- ${{ if eq( parameters.wasm_enabled, true ) }}:
  - template:  build-wasm.yml
    parameters:
      # Stage name and whether it's enabled
      stage_name: '${{ parameters.name }}Build_Wasm'
      ${{ if parameters.solution_build_enabled }}:
        depends_on: '${{ parameters.name }}Build_Solution'
      ${{ else }}:
        depends_on: '${{ parameters.name }}Print_Parameters'
      build_enabled: ${{ parameters.wasm_enabled }}
      # Version information
      full_version_number: ${{ parameters.full_version_number }}
      # Solution to build
      project_filename: ${{ parameters.wasm_project_file }}
      # Output information
      artifact_folder: 'Wasm'
      ${{ if or( ne( parameters.appsettings_securefile, '' ), eq( parameters.banner_enabled, true ) ) }}:
        preBuild:
          - template: ../steps/app-prebuild.yml
            parameters:
              appsettings_filename: ${{ parameters.appsettings_filename }}
              appsettings_securefile: ${{ parameters.appsettings_securefile }}
              solution_filename: ${{ parameters.solution_filename }}
              banner_enabled: ${{ parameters.banner_enabled }}
              banner_image_expression: '**/*SplaschScreen*.png'
              banner_version_name_position: '${{ parameters.banner_version_name_position }}'
              banner_version_name_text: '${{ parameters.banner_version_name_text }}'
              banner_version_name_color: '${{ parameters.banner_version_name_color }}'
              banner_version_name_text_color: '${{ parameters.banner_version_name_text_color }}'
              banner_version_number_position: '${{ parameters.banner_version_number_position }}'
              ${{ if ne( parameters.banner_version_number_text, '' ) }}:
                banner_version_number_text: '${{ parameters.banner_version_number_text }}'
              ${{ else }}:
                banner_version_number_text: '${{ parameters.full_version_number }}'
              banner_version_number_color: '${{ parameters.banner_version_number_color }}'
              banner_version_number_text_color: '${{ parameters.banner_version_number_text_color }}' 

- ${{ if and( eq( parameters.wasm_enabled, true ), eq( parameters.deploy_enabled, true) ) }}:
  - template:  deploy-static-web-app.yml
    parameters:
      # Stage name and whether it's enabled
      stage_name: '${{ parameters.name }}Deploy_Wasm'
      depends_on: '${{ parameters.name }}Build_Wasm'
      environment_name: ${{ parameters.deploy_environment }}
      # Build artifacts
      artifact_folder: 'Wasm'
      # Deployment to Static Web Apps
      staticwebapp_name: ${{ parameters.wasm_static_app_name }}
      azure_subscription_connection_name: ${{ parameters.azure_subscription_connection_name }}
      resource_group_name: ${{ parameters.resource_group_name }}

- ${{ if eq( parameters.android_enabled, true ) }}:
  - template:  build-xamarin-android.yml
    parameters:
      # Stage name and whether it's enabled
      stage_name: '${{ parameters.name }}Build_Android'
      ${{ if parameters.solution_build_enabled }}:
        depends_on: '${{ parameters.name }}Build_Solution'
      ${{ else }}:
        depends_on: '${{ parameters.name }}Print_Parameters'
      build_enabled: ${{ parameters.android_enabled }}
      # Version information
      full_version_number: ${{ parameters.full_version_number }}
      # # # Signing information
      secure_file_keystore_filename: ${{ parameters.android_secure_file_keystore_filename }}
      keystore_alias: ${{ parameters.android_keystore_alias }}
      keystore_password: ${{ parameters.android_keystore_password }}
      # Solution to build
      solution_filename: ${{ parameters.solution_filename }}
      # Output information
      artifact_folder: 'Android'
      application_package: 'UnoAndroidApp.aab'
      ${{ if or( ne( parameters.appsettings_securefile, '' ), eq( parameters.banner_enabled, true ) ) }}:
        preBuild:
          - template: ../steps/app-prebuild.yml
            parameters:
              appsettings_filename: ${{ parameters.appsettings_filename }}
              appsettings_securefile: ${{ parameters.appsettings_securefile }}
              solution_filename: ${{ parameters.solution_filename }}
              banner_enabled: ${{ parameters.banner_enabled }}
              banner_image_expression: '**/*SplaschScreen*.png'
              banner_version_name_position: '${{ parameters.banner_version_name_position }}'
              banner_version_name_text: '${{ parameters.banner_version_name_text }}'
              banner_version_name_color: '${{ parameters.banner_version_name_color }}'
              banner_version_name_text_color: '${{ parameters.banner_version_name_text_color }}'
              banner_version_number_position: '${{ parameters.banner_version_number_position }}'
              ${{ if ne( parameters.banner_version_number_text, '' ) }}:
                banner_version_number_text: '${{ parameters.banner_version_number_text }}'
              ${{ else }}:
                banner_version_number_text: '${{ parameters.full_version_number }}'
              banner_version_number_color: '${{ parameters.banner_version_number_color }}'
              banner_version_number_text_color: '${{ parameters.banner_version_number_text_color }}' 

- ${{ if and( eq( parameters.android_enabled, true ), eq( parameters.deploy_enabled, true) ) }}:
  - template:  deploy-appcenter.yml
    parameters:
      # Stage name and whether it's enabled
      stage_name: '${{ parameters.name }}Deploy_Android'
      depends_on: '${{ parameters.name }}Build_Android'
      environment_name: ${{ parameters.deploy_environment }}
      # Build artifacts
      artifact_folder: 'Android'
      application_package: 'UnoAndroidApp.aab'
      # Signing information (for Android repack to APK)
      secure_file_keystore_filename: ${{ parameters.android_secure_file_keystore_filename }}
      keystore_alias: ${{ parameters.android_keystore_alias }}
      keystore_password: ${{ parameters.android_keystore_password }}
      # Deployment to AppCenter
      appcenter_service_connection: ${{ parameters.appcenter_service_connection }}
      appcenter_organisation: ${{ parameters.appcenter_organisation }}
      appcenter_applicationid: ${{ parameters.appcenter_applicationid_android }}


- ${{ if eq( parameters.ios_enabled, true ) }}:
  - template:  build-xamarin-ios.yml
    parameters:
      # Stage name and whether it's enabled
      stage_name: '${{ parameters.name }}Build_iOS'
      ${{ if parameters.solution_build_enabled }}:
        depends_on: '${{ parameters.name }}Build_Solution'
      ${{ else }}:
        depends_on: '${{ parameters.name }}Print_Parameters'
      build_enabled: ${{ parameters.ios_enabled }}
      # Version information
      full_version_number: ${{ parameters.full_version_number }}
      # Solution to build
      solution_filename: $(ios_solution_filter)
      # Signing information
      ios_plist_filename: ${{ parameters.ios_plist_filename }}
      ios_cert_password: ${{ parameters.ios_cert_password }}
      ios_cert_securefiles_filename: ${{ parameters.ios_cert_securefiles_filename }}
      ios_provisioning_profile_securefiles_filename: ${{ parameters.ios_provisioning_profile_securefiles_filename }}
      # Output information
      artifact_folder: 'iOS'
      application_package: 'iOS.ipa'
      ${{ if or( ne( parameters.appsettings_securefile, '' ), eq( parameters.banner_enabled, true ) ) }}:
        preBuild:
          - template: ../steps/app-prebuild.yml
            parameters:
              appsettings_filename: ${{ parameters.appsettings_filename }}
              appsettings_securefile: ${{ parameters.appsettings_securefile }}
              solution_filename: ${{ parameters.solution_filename }}
              banner_enabled: ${{ parameters.banner_enabled }}
              banner_image_expression: '**/*SplaschScreen*.png'
              banner_version_name_position: '${{ parameters.banner_version_name_position }}'
              banner_version_name_text: '${{ parameters.banner_version_name_text }}'
              banner_version_name_color: '${{ parameters.banner_version_name_color }}'
              banner_version_name_text_color: '${{ parameters.banner_version_name_text_color }}'
              banner_version_number_position: '${{ parameters.banner_version_number_position }}'
              ${{ if ne( parameters.banner_version_number_text, '' ) }}:
                banner_version_number_text: '${{ parameters.banner_version_number_text }}'
              ${{ else }}:
                banner_version_number_text: '${{ parameters.full_version_number }}'
              banner_version_number_color: '${{ parameters.banner_version_number_color }}'
              banner_version_number_text_color: '${{ parameters.banner_version_number_text_color }}' 

- ${{ if and( eq( parameters.ios_enabled, true ), eq( parameters.deploy_enabled, true) ) }}:
  - template:  deploy-appcenter.yml
    parameters:
      # Stage name and whether it's enabled
      stage_name: '${{ parameters.name }}Deploy_iOS'
      depends_on: '${{ parameters.name }}Build_iOS'
      environment_name: ${{ parameters.deploy_environment }}
      # Build artifacts
      artifact_folder: 'iOS'
      application_package: 'iOS.ipa'
      # Deployment to AppCenter
      appcenter_service_connection: ${{ parameters.appcenter_service_connection }}
      appcenter_organisation: ${{ parameters.appcenter_organisation }}
      appcenter_applicationid: ${{ parameters.appcenter_applicationid_ios }}